#pragma checksum "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8ba465041ada73f2a7474ea12df3c2c8fd011290"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\_ViewImports.cshtml"
using ParkBee.Assesment.Website;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\_ViewImports.cshtml"
using ParkBee.Assesment.Website.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8ba465041ada73f2a7474ea12df3c2c8fd011290", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"59d9593886a909c78e9441d6b6cf586071fef23f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    .custom-button {
        border-radius: 20px;
        height: 100px;
    }
</style>

<div class=""text-center"">
    <h1 class=""display-4"">Hi</h1>
    <p>Please find below my assesment</p>
</div>

<br /> <br /> <br />

<div class=""text-center"">
    <input type=""button"" class=""btn-primary custom-button"" value=""My Garage""");
            BeginWriteAttribute("onclick", " onclick=\"", 391, "\"", 448, 3);
            WriteAttributeValue("", 401, "location.href=\'", 401, 15, true);
#nullable restore
#line 19 "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\Home\Index.cshtml"
WriteAttributeValue("", 416, Url.Action("Index", "Garages"), 416, 31, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 447, "\'", 447, 1, true);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"button\" class=\"btn-primary custom-button\" value=\"Door Status History\"");
            BeginWriteAttribute("onclick", " onclick=\"", 540, "\"", 607, 3);
            WriteAttributeValue("", 550, "location.href=\'", 550, 15, true);
#nullable restore
#line 20 "C:\Dev\GarageChecker\backend\ParkBee.Assesment.Website\Views\Home\Index.cshtml"
WriteAttributeValue("", 565, Url.Action("Index", "DoorStatusHistory"), 565, 41, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 606, "\'", 606, 1, true);
            EndWriteAttribute();
            WriteLiteral(@" />
</div>

<div class=""text-left"">
    <h1 class=""display-4""><b>My Garage</b></h1>
    <p>• Getting the garage details (Garage is based on the token's garage id)</p>
    <p>• All the doors for the garage is also listed (Click on the garage and the list will appear)</p>
    <p>• You are able to refresh the garage using the refresh button</p>
    <p>• You can also refresh each door usng the refresh button (This will ping each door separately)</p>

    <br /> <br /> <br /> <br />

    <h1 class=""display-4""><b>Door Status History</b></h1>
    <p>• This will display the history of all the door status changes.</p>

    <br /> <br /> <br /> <br />

    <h1 class=""display-4""><b>Ad-Hoc</b></h1>
    <p>• To test the history status, do the following.</p>
    <p>• Make sure the ip assigned to a door is the same as your local network computer ip or any other device (Startup.cs file in the api project).</p>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
